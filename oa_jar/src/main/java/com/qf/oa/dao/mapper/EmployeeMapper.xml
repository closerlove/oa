<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.oa.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.qf.oa.entity.Employee">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="did" jdbcType="INTEGER" property="did" />
    <result column="dname" jdbcType="VARCHAR" property="dname" />
    <result column="count(sex)" jdbcType="INTEGER" property="count" />
  </resultMap>
    <resultMap id="EmoRoleRescInfoMap" type="com.qf.oa.entity.Employee" extends="BaseResultMap">
        <collection property="roles" ofType="role">
            <id column="rid" property="id"/>
            <result column="rolename" property="rolename"/>
        </collection>
        <collection property="rescs" ofType="resc">
            <id column="reid" property="id"></id>
            <result column="pid" property="pid"/>
            <result column="rname" property="rname"/>
            <result column="repath" property="repath"/>
            <result column="restate" property="restate"/>
            <result column="redesc" property="redesc"/>
        </collection>
    </resultMap>
    
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, email, password, name, sex, birthday, image, did
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qf.oa.entity.Employee">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into employee (id, email, password, 
      name, sex, birthday, 
      image, did)
    values (#{id,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=TIMESTAMP}, 
      #{image,jdbcType=VARCHAR}, #{did,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.oa.entity.Employee">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="did != null">
        did,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="did != null">
        #{did,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.oa.entity.Employee">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update employee
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="did != null">
        did = #{did,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.oa.entity.Employee">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update employee
    set email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      image = #{image,jdbcType=VARCHAR},
      did = #{did,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getEmpList" resultMap="BaseResultMap">
    select e.*, d.dname from employee e left join department d on e.did = d.id
  </select>

  <select id="login" resultMap="EmoRoleRescInfoMap">
    select e.*,ert.rid,r.*,rrt.reid,r2.* from employee e
    LEFT JOIN emp_role_table ert on ert.eid=e.id
    LEFT JOIN role r on r.id=ert.rid
    LEFT JOIN role_resc_table rrt on rrt.rid=r.id
    LEFT JOIN resc r2 on r2.id =rrt.reid
      where e.email=#{email} and e.password=#{password}
  </select>


  <select id="queryByEmail" resultMap="EmoRoleRescInfoMap">
    select e.*,ert.rid,r.*,rrt.reid,r2.* from employee e
    LEFT JOIN emp_role_table ert on ert.eid=e.id
    LEFT JOIN role r on r.id=ert.rid
    LEFT JOIN role_resc_table rrt on rrt.rid=r.id
    LEFT JOIN resc r2 on r2.id =rrt.reid
      where e.email=#{email}
  </select>

  <select id="queryInfo" resultMap="EmoRoleRescInfoMap">
    select * from employee where (name like concat('%', #{keyword}, '%') or email like concat('%', #{keyword}, '%')) and id != #{eid}
  </select>

  <select id="queryBySexCount" resultMap="BaseResultMap">
    select e.sex,count(sex) from employee e GROUP BY sex;
  </select>

  <insert id="insertExcel" parameterType="com.qf.oa.entity.Employee">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into employee (id, email, password,
    name, sex, birthday,
    image, did)
    values (#{id,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=TIMESTAMP},
    #{image,jdbcType=VARCHAR},(select id from department where dname=#{dname,jdbcType=VARCHAR}))
  </insert>

  <update id="updateExcel" parameterType="com.qf.oa.entity.Employee">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update employee
    set email = #{email,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},
    name = #{name,jdbcType=VARCHAR},
    sex = #{sex,jdbcType=INTEGER},
    birthday = #{birthday,jdbcType=TIMESTAMP},
    image = #{image,jdbcType=VARCHAR},
    did = (select id from department where dname=#{dname,jdbcType=VARCHAR})
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>